{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import { nanoid } from 'nanoid'\n\n//TODO-1\n\n// Напишіть логіку обробнику подій по сабміту\n\n// При сабміті треба у змінну записувати значення поля інпута\n\n// Повинна бути перевірка на порожнє поле\n\nconst form = document.querySelector(\"#task-form\");\nconst taskList = document.querySelector(\"#task-list\");\n\nonRender();\n\nform.addEventListener(\"submit\",(event) => {\n    event.preventDefault();\n    const value = event.target.elements.taskName.value.trim();\n    if (!value) return;\n    addTask(value);\n}); \n\n\n\n//TODO-2\n// Напишіть логіку яка з сабміта буде брати значення поля інпут\n// Генерувати елемент списку LI  з текстом і кнопкою Х, у майбутньому це буде кнопка видалення таски\n\n\n\nfunction generateList(text, id) {\n    const markUP = `<li id=${id}>${text}<button type=\"button\" class=\"close-btn\">X</button></li>`\n    taskList.insertAdjacentHTML(\"beforeend\", markUP);\n}\n\n//TODO-3\n// Написати функцію яка буде зберігати данні в сховище вигляді об'єкта { id: value, text: value}\n\n\n\nfunction addTask(text) {\n    const id = nanoid();\n    const formData = {\n        id,\n        text\n    };\n    generateList(text, id);\n    const taskArr = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    taskArr.push(formData);\n\n    localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n}\n\nfunction onRender() {\n    const data = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (!data) return;\n    const startMarkUp = data.map(item => `<li id=\"${item.id}\">${item.text}<button type=\"button\" class=\"close-btn\">X</button></li>`).join(\"\");\n    taskList.insertAdjacentHTML(\"beforeend\", startMarkUp)\n}\n\n\ntaskList.addEventListener(\"click\", (event) => {\n    if (!(event.target.classList.contains(\"close-btn\"))) return;\n    const storageArr = JSON.parse(localStorage.getItem(\"tasks\"));\n    const reducedArr = storageArr.filter(item => item.id !== event.target.parentNode.id);\n    localStorage.setItem(\"tasks\", JSON.stringify(reducedArr));\n    event.target.parentNode.remove();\n})\n"],"names":["form","taskList","onRender","event","value","addTask","generateList","text","id","markUP","nanoid","formData","taskArr","data","startMarkUp","item","reducedArr"],"mappings":"svBAUA,MAAMA,EAAO,SAAS,cAAc,YAAY,EAC1CC,EAAW,SAAS,cAAc,YAAY,EAEpDC,IAEAF,EAAK,iBAAiB,SAAUG,GAAU,CACtCA,EAAM,eAAc,EACpB,MAAMC,EAAQD,EAAM,OAAO,SAAS,SAAS,MAAM,OAC9CC,GACLC,EAAQD,CAAK,CACjB,CAAC,EAUD,SAASE,EAAaC,EAAMC,EAAI,CAC5B,MAAMC,EAAS,UAAUD,CAAE,IAAID,CAAI,0DACnCN,EAAS,mBAAmB,YAAaQ,CAAM,CACnD,CAOA,SAASJ,EAAQE,EAAM,CACnB,MAAMC,EAAKE,IACLC,EAAW,CACb,GAAAH,EACA,KAAAD,CACR,EACID,EAAaC,EAAMC,CAAE,EACrB,MAAMI,EAAU,KAAK,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAK,GAC7DA,EAAQ,KAAKD,CAAQ,EAErB,aAAa,QAAQ,QAAS,KAAK,UAAUC,CAAO,CAAC,CACzD,CAEA,SAASV,GAAW,CAChB,MAAMW,EAAO,KAAK,MAAM,aAAa,QAAQ,OAAO,CAAC,EACrD,GAAI,CAACA,EAAM,OACX,MAAMC,EAAcD,EAAK,IAAIE,GAAQ,WAAWA,EAAK,EAAE,KAAKA,EAAK,IAAI,yDAAyD,EAAE,KAAK,EAAE,EACvId,EAAS,mBAAmB,YAAaa,CAAW,CACxD,CAGAb,EAAS,iBAAiB,QAAUE,GAAU,CAC1C,GAAI,CAAEA,EAAM,OAAO,UAAU,SAAS,WAAW,EAAI,OAErD,MAAMa,EADa,KAAK,MAAM,aAAa,QAAQ,OAAO,CAAC,EAC7B,OAAOD,GAAQA,EAAK,KAAOZ,EAAM,OAAO,WAAW,EAAE,EACnF,aAAa,QAAQ,QAAS,KAAK,UAAUa,CAAU,CAAC,EACxDb,EAAM,OAAO,WAAW,QAC5B,CAAC"}